apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-secret
data:
  MONGODB_CONNECTION_STRING: {{ .Values.MONGODB_CONNECTION_STRING | b64enc }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-job
spec:
  template:
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: ghcr.io/{{ .Values.USERNAME }}/fastify-boilerplate:main
        imagePullPolicy: Always
        resources:
          requests:
            memory: "256Mi"
          limits:
            memory: "256Mi"
        env:
        - name: JOB
          value: "true"
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-secret
      restartPolicy: OnFailure
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
spec:
  replicas: 2
  revisionHistoryLimit: 0
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: ghcr.io/{{ .Values.USERNAME }}/fastify-boilerplate:main
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "256Mi"
          limits:
            memory: "256Mi"
        livenessProbe:
          httpGet:
            path: /api/v1/ping
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        env:
        - name: HOST
          value: "{{ .Values.HOST }}"
        envFrom:
        - secretRef:
            name: {{ .Release.Name }}-secret
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-service
spec:
  selector:
    app: {{ .Release.Name }}
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-ingress
spec:
  tls:
  - hosts:
    - {{ .Values.HOST }}
    secretName: {{ replace "." "-" .Values.HOST }}-secret
  rules:
    - host: "{{ .Values.HOST }}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-service
                port:
                  number: 80
  ingressClassName: nginx